{"version":3,"sources":["customFetch.js","components/list.js","components/content.js","redux/actions/index.js","App.js","reportWebVitals.js","index.js","redux/redusers/index.js"],"names":["customFetch","path","options","API","fetch","headers","then","res","json","TodoList","props","data","deleteItem","doneItem","markItem","useState","deleteLoading","setDeleteLoading","doneLoading","setDoneLoading","markLoading","setMarkLoading","bordered","loading","dataSource","style","marginTop","renderItem","_id","title","isDone","isMarked","Item","className","Text","delete","strong","color","cursor","onClick","id","method","body","JSON","stringify","name","val","catch","err","alert","finally","handleDone","danger","icon","DeleteOutlined","marginRight","ExclamationOutlined","handleMark","connect","state","dispatch","setElm","type","setItem","deleteElm","addElm","newItem","addItem","doneElm","markElm","_data","setData","loadingAdd","setLoadingAdd","activeTab","setActiveTab","searchText","setSearchText","active","done","activeAndDone","setActiveAndDone","Content","Layout","inputRef","useRef","useEffect","getItems","console","log","CountActiveAndDone","handleSearch","length","filter","toLowerCase","includes","handleAddItem","current","value","trim","justify","xs","sm","md","lg","fontSize","marginBottom","size","placeholder","onChange","e","target","Group","defaultValue","buttonStyle","Button","ref","onKeyPress","key","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","action","map","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.eb9b8893.chunk.js","sourcesContent":["export const customFetch = (path, options = {}) => {\n    const API = \"https://todo-apn.herokuapp.com\"\n\n    return fetch(`${API}/items${path}`, {\n        ...options,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }).then(res => res.json())\n}","import \"../assets/style/todoList.css\"\nimport { useState } from \"react\"\nimport { customFetch } from \"../customFetch\"\nimport { List, Button, Typography } from 'antd';\nimport { DeleteOutlined, ExclamationOutlined } from '@ant-design/icons';\n\n\nexport const TodoList = props => {\n    const { data, deleteItem, doneItem, markItem } = props\n    const [deleteLoading, setDeleteLoading] = useState('')\n    const [doneLoading, setDoneLoading] = useState(false)\n    const [markLoading, setMarkLoading] = useState('')\n\n    const handleDelete = (id) => {\n        setDeleteLoading(id)\n        customFetch('/delete', {\n            method: \"DELETE\",\n            body: JSON.stringify({id})\n        }).then(() => deleteItem(id))\n        .catch(err => alert(err))\n        .finally(() => setDeleteLoading(''))\n    }\n\n    const handleDone = (id, isDone) => {\n        setDoneLoading(true)\n        customFetch('/update', {\n            method: 'PUT',\n            body: JSON.stringify({id, name: \"isDone\", val: !isDone})\n        }).then(() => doneItem(id))\n        .catch(err => alert(err))\n        .finally(() => setDoneLoading(false))\n    }\n\n    const handleMark = (id, isMarked) => {\n        setMarkLoading(id)\n        customFetch('/update', {\n            method: 'PUT',\n            body: JSON.stringify({id, name: \"isMarked\", val: !isMarked})\n        }).then(() => markItem(id))\n        .catch(err => alert(err))\n        .finally(() => setMarkLoading(''))\n        \n    }\n\n    return (\n        <List\n            bordered\n            loading={doneLoading}\n            dataSource={data}\n            style={{marginTop: '1rem'}} \n            renderItem={({_id, title, isDone, isMarked}) => (\n                <List.Item>\n                    <div className=\"item-content\">\n                        <Typography.Text\n                            delete={isDone}\n                            strong={isMarked}\n                            style={{color: isMarked ? '#4682b4' : 'unset', cursor: 'pointer'}}\n                            onClick={() => handleDone(_id, isDone)}\n                        >\n                            {title}\n                        </Typography.Text> \n                        <div>\n                            <Button\n                                danger\n                                loading={deleteLoading === _id ? 1 : 0}\n                                icon={<DeleteOutlined />}\n                                style={{marginRight: 7}}\n                                className=\"btn\"\n                                onClick={() => handleDelete(_id)}\n                            />\n                            <Button\n                                loading={markLoading === _id ? 1 : 0}\n                                icon={<ExclamationOutlined />}\n                                className=\"btn btn-success\"\n                                onClick={() => handleMark(_id, isMarked)}\n                            />\n                        </div>\n                    </div>\n                </List.Item>\n            )}\n        />\n    )\n}","import \"../assets/style/content.css\"\nimport { connect } from 'react-redux'\nimport { TodoList } from \"./list\"\nimport { customFetch } from \"../customFetch\"\nimport { useState, useEffect, useRef } from \"react\"\nimport { deleteItem, addItem, doneItem, markItem, setItem } from \"../redux/actions/index\"\nimport { \n    Col, \n    Row, \n    Input, \n    Radio, \n    Layout, \n    Button, \n} from 'antd';\n\nconst Content = (props) => {\n    const { data, deleteElm, addElm, doneElm, markElm, setElm } = props\n    const [_data, setData] = useState(data)\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [activeTab, setActiveTab] = useState(\"a\")\n    const [searchText, setSearchText] = useState(\"\")\n    const [activeAndDone, setActiveAndDone] = useState({active: 0, done: 0})\n    const { Content } = Layout;\n\n    const inputRef = useRef()\n\n    // Get items from database\n    useEffect(() => {\n        getItems()\n    }, [])\n\n    const getItems = () => {\n        customFetch('/')\n            .then(data => setElm(data))\n            .catch(err => console.log(err))\n    }\n\n    // Update\n    useEffect(() => {\n        CountActiveAndDone()\n        setData(data)\n        handleSearch(searchText)\n    }, [data])\n\n    \n    // Count active and done amount\n    const CountActiveAndDone = () => {\n        let done = 0;\n        for (let {isDone} of data) {\n            if(isDone) done++;\n        }\n\n        setActiveAndDone({active: data.length - done, done})\n    }\n\n    // Search\n    const handleSearch = (val) => {\n        setSearchText(val);\n        setData(data.filter(({title}) => title.toLowerCase().includes(val.toLowerCase())))\n    }\n\n    // Add a new item\n    const handleAddItem = () => {\n        if(inputRef.current.value.trim().length) {\n            setLoadingAdd(true)\n            customFetch('/add', {\n                method: \"POST\",\n                body: JSON.stringify({title: inputRef.current.value})\n            }).then(data => addElm(data))\n            .catch(err => alert(err))\n            .finally(() => setLoadingAdd(false))\n        }\n    }\n\n    return (\n        <Content className=\"content-body\">\n            <Row justify=\"center\" style={{marginTop: '1rem'}}>\n                <Col xs={24} sm={16} md={12} lg={8}>\n\n                    <div className=\"content-title\">\n                        <h1 style={{fontSize: \"40px\", marginBottom: '8px'}}>Todo list</h1>\n                        <h2 style={{color: \"#6c757d\", marginBottom: '8px'}}>\n                            {activeAndDone.active} more to do, {activeAndDone.done} done\n                        </h2>\n                    </div>\n\n                    <Input \n                        size=\"large\" \n                        className=\"search-input\"\n                        placeholder=\"type to search\" \n                        value={searchText}\n                        onChange={e => handleSearch(e.target.value)}\n                    />\n\n                    <Radio.Group \n                        size=\"large\"\n                        defaultValue={activeTab}\n                        buttonStyle=\"solid\"\n                        className=\"action-btn-group\"\n                        onChange={e => setActiveTab(e.target.value)}\n                    >\n                        <Radio.Button value=\"a\">All</Radio.Button>\n                        <Radio.Button value=\"b\">Active</Radio.Button>\n                        <Radio.Button value=\"c\">Done</Radio.Button>\n                    </Radio.Group>\n\n                    {activeTab === \"a\" \n                        ? (\n                            <TodoList \n                                data={_data} \n                                deleteItem={deleteElm}\n                                doneItem={doneElm}\n                                markItem={markElm}\n                            />\n                        ) : activeTab === \"b\" ? (\n                            <TodoList \n                                data={_data.filter(({isDone}) => !isDone)} \n                                deleteItem={deleteElm}\n                                doneItem={doneElm}\n                                markItem={markElm}\n                            />\n                        ) : activeTab === \"c\" ? (\n                            <TodoList \n                                data={_data.filter(({isDone}) => isDone)} \n                                deleteItem={deleteElm}\n                                doneItem={doneElm}\n                                markItem={markElm}\n                            />\n                        ) : <></>\n                    }\n\n                    <div className=\"adding-content\">\n                        <Input \n                            size=\"large\" \n                            ref={inputRef}\n                            placeholder=\"What needs to be done\" \n                            onChange={e => {inputRef.current.value = e.target.value}}\n                            onKeyPress={e => e.key === \"Enter\" && handleAddItem()}\n                        />\n                        <Button \n                            size=\"large\"\n                            className=\"add-btn\"\n                            loading={loadingAdd}\n                            onClick={handleAddItem}\n                        >\n                            Add Item\n                        </Button>\n                    </div>\n\n                </Col>\n            </Row>\n        </Content>\n    )\n}\n\nconst stateToProps = state => {\n    return {\n        data: state\n    }\n}\n\nconst manageItemToProps = dispatch => {\n    return {\n        setElm: val => dispatch(setItem(val)),\n        deleteElm: id => dispatch(deleteItem(id)),\n        addElm: newItem => dispatch(addItem(newItem)),\n        doneElm: id => dispatch(doneItem(id)),\n        markElm: id => dispatch(markItem(id))\n    }\n}\n\nexport default connect(stateToProps, manageItemToProps)(Content);","export const setItem = (data = []) => {\n    return {\n        type: 'SET',\n        data\n    }\n}\n\nexport const addItem = (newItem = {}) => {\n    return {\n        type: 'ADD',\n        newItem\n    }\n}\n\nexport const deleteItem = (id = null) => {\n    return {\n        type: 'DELETE',\n        id\n    }\n}\n\nexport const doneItem = (id = null) => {\n    return {\n        type: \"DONE\",\n        id\n    }\n}\n\nexport const markItem = (id = null) => {\n    return {\n        type: \"MARK\",\n        id\n    }\n}","import Content from \"./components/content\"\nimport { Layout } from 'antd';\n\nfunction App() {\n\n  return (\n    <Layout>\n      <Content />\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport { Reduser } from \"./redux/redusers/index\"\nimport { Provider } from \"react-redux\"\nimport { createStore } from \"redux\"\nimport reportWebVitals from './reportWebVitals';\n\n// STORE\nconst data = createStore(\n  Reduser,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={data}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const Reduser = (state = [], action) => {\n    const { id, newItem, type, data } = action\n    switch(type) {\n        case \"SET\":\n            return data;\n        case 'ADD':\n            return [...state, newItem];\n        case 'DELETE':\n            return state.filter(({_id}) => _id !== id);\n        case 'DONE':\n            return state.map((val) => val._id === id ? ({...val, isDone: !val.isDone}) : val);\n        case 'MARK':\n            return state.map((val) => val._id === id ? ({...val, isMarked: !val.isMarked}) : val);\n        default:\n            return state;\n    }\n}"],"sourceRoot":""}